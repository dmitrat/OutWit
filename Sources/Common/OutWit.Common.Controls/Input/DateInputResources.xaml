<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:OutWit.Common.Controls.Input"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OutWit.Common.Controls;component/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="i:DateInput">
        <Style.Resources>
            <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="CalendarStyle" Value="{StaticResource MaterialDesignDatePickerCalendarPortrait}" />
                <Setter Property="IsTodayHighlighted" Value="True" />
                <Setter Property="SelectedDateFormat" Value="Short" />
                <Setter Property="BorderThickness" Value="0 0 0 1" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 0 0 0" />
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
                <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <Setter Property="md:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="md:HintAssist.IsFloating" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <ControlTemplate.Resources>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid Background="Transparent">
                                        <md:PackIcon Kind="EllipsisHorizontal" Foreground="{Binding ElementName=Input, Path=BorderBrush}"
                                                     Height="32" Width="32" Padding="0, 0, 5, 0" VerticalAlignment="Center" />
                                    </Grid>
                                </ControlTemplate>
                            </ControlTemplate.Resources>
                            <Grid x:Name="PART_Root">
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   TabIndex="{TemplateBinding TabIndex}"
                                           Grid.Column="0"
                                           Focusable="{TemplateBinding Focusable}"
                                           Grid.Row="0"
                                           Padding="0,0,8,0"
                                           VerticalContentAlignment="Center"
                                           Style="{DynamicResource MaterialDesignDatePickerTextBox}"
                                           HorizontalAlignment="Stretch"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           md:HintAssist.IsFloating="{Binding Path=(md:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:HintAssist.FloatingScale="{Binding Path=(md:HintAssist.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:HintAssist.FloatingOffset="{Binding Path=(md:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:HintAssist.Hint="{Binding Path=(md:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:HintAssist.HintOpacity="{Binding Path=(md:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:HintAssist.Foreground="{Binding Path=(md:HintAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:HintAssist.HelperText="{Binding Path=(md:HintAssist.HelperText), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.TextBoxViewMargin="{Binding Path=(md:TextFieldAssist.TextBoxViewMargin), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.DecorationVisibility="{Binding Path=(md:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.HasFilledTextField="{Binding Path=(md:TextFieldAssist.HasFilledTextField), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.HasOutlinedTextField="{Binding Path=(md:TextFieldAssist.HasOutlinedTextField), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.TextFieldCornerRadius="{Binding Path=(md:TextFieldAssist.TextFieldCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.UnderlineCornerRadius="{Binding Path=(md:TextFieldAssist.UnderlineCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.NewSpecHighlightingEnabled="{Binding Path=(md:TextFieldAssist.NewSpecHighlightingEnabled), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.RippleOnFocusEnabled="{Binding Path=(md:TextFieldAssist.RippleOnFocusEnabled), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.UnderlineBrush="{Binding Path=(md:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.HasClearButton="{Binding Path=(md:TextFieldAssist.HasClearButton), RelativeSource={RelativeSource TemplatedParent}}"
                                           md:TextFieldAssist.SuffixText="{Binding Path=(md:TextFieldAssist.SuffixText), RelativeSource={RelativeSource TemplatedParent}}"
                                           />
                                <Button x:Name="PART_Button"
                                Foreground="{TemplateBinding BorderBrush}"
                                Focusable="False"
                                HorizontalAlignment="Right"
                                Margin="4 0 0 -3"
                                Template="{StaticResource DropDownButtonTemplate}" 
                                Padding="0"
                                Height="17" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" 
                               Placement="Custom"
                               CustomPopupPlacementCallback="{x:Static md:CustomPopupPlacementCallbackHelper.LargePopupCallback}"
                               PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"
                               PopupAnimation="Fade"  />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="md:TextFieldAssist.HasFilledTextField" Value="True">
                                    <Setter TargetName="PART_TextBox" Property="Padding" Value="0,0,22,0" />
                                    <Setter TargetName="PART_Button" Property="Margin" Value="4 0 12 -3" />
                                    <Setter TargetName="PART_Button" Property="Height" Value="20" />
                                </Trigger>
                                <Trigger Property="md:TextFieldAssist.HasOutlinedTextField" Value="True">
                                    <Setter TargetName="PART_TextBox" Property="Padding" Value="0,0,22,0" />
                                    <Setter TargetName="PART_Button" Property="Margin" Value="4 0 12 -3" />
                                    <Setter TargetName="PART_Button" Property="Height" Value="20" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="md:TextFieldAssist.HasFilledTextField" Value="False" />
                                        <Condition Property="md:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                        <Condition Property="md:HintAssist.IsFloating" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Button" Property="Margin" Value="4 0 0 -15" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="md:TextFieldAssist.HasFilledTextField" Value="False" />
                                        <Condition Property="md:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True" />
                                        <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="PART_Button" Property="Opacity" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter TargetName="PART_TextBox" Property="md:ValidationAssist.HasError" Value="True" />
                                    <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource ValidationErrorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ImageSize" Value="24"/>
        <Setter Property="ShowImage" Value="True"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="i:DateInput">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <md:PackIcon Grid.Column="0" Kind="{TemplateBinding ImageKind}" Foreground="{Binding ElementName=Input, Path=BorderBrush}"
                                     Height="{TemplateBinding ImageSize}" Width="{TemplateBinding ImageSize}" 
                                     Visibility="{TemplateBinding ShowImage, Converter={StaticResource BooleanToVisibility}}" />
                        <DatePicker x:Name="Input" Grid.Column="1" Style="{StaticResource DatePickerStyle}" IsEnabled="{TemplateBinding IsEnabled}"
                                    md:HintAssist.Hint="{TemplateBinding Header}" md:HintAssist.FloatingScale="{TemplateBinding HeaderScale}" 
                                    SelectedDate="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    TabIndex="{TemplateBinding TabIndex}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>