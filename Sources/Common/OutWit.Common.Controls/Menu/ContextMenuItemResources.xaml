<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OutWit.Common.Controls.Menu"
                    xmlns:o="clr-namespace:OutWit.Common.Controls.Output"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OutWit.Common.Controls;component/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="local:ContextMenuItem" >
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="IconHeight" Value="24"/>
        <Setter Property="IconWidth" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ContextMenuItem">
                    <Grid ClipToBounds="True">
                        <Border x:Name="templateRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"/>
                        <Border x:Name="BackgroundRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource PrimaryHueLightForegroundBrush}"
                                SnapsToDevicePixels="True"
                                Opacity="0"/>
                        <wpf:Ripple Background="Transparent"
                                        HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                        Focusable="False"
                                        Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
                            <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                <Grid VerticalAlignment="Center"
                                          Background="Transparent"
                                          Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <o:IconOutput Kind="{Binding Path=Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Padding="1" Background="Transparent"
                                                      Width="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"
                                                      IconHeight="{Binding Path=IconHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                      IconWidth="{Binding Path=IconWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                      IconPosition="{Binding Path=IconPosition, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextKey="{Binding Path=TextKey, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ToolTipKey="{Binding Path=ToolTipKey, RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextFormat="{Binding Path=TextFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextFormatKey="{Binding Path=TextFormatKey, RelativeSource={RelativeSource TemplatedParent}}"
                                                      TextConverter="{Binding Path=TextConverter, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Margin="{Binding Path=Margin, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>
                                    <Grid x:Name="InputGestureTextWrapper"
                                              Grid.Column="1"
                                              Visibility="Collapsed">
                                        <TextBlock Visibility="{TemplateBinding InputGestureText, Converter={StaticResource StringIsEmptyVisibilityConverter}}"
                                                       Margin="16 0 0 0"
                                                       VerticalAlignment="Center" HorizontalAlignment="Right"
                                                       Text="{TemplateBinding InputGestureText}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                       Foreground="{TemplateBinding Foreground}"/>
                                    </Grid>
                                    <Grid x:Name="SubBlock"
                                              Grid.Column="1"
                                              Visibility="Collapsed"
                                              Margin="16 0 0 0">
                                        <Path Width="5" Height="10"
                                                  Stretch="Uniform"
                                                  HorizontalAlignment="Right"
                                                  VerticalAlignment="Center"
                                                  Data="M0,16 L8,8 L0,0 Z"
                                                  Fill="{TemplateBinding Foreground}"
                                                  SnapsToDevicePixels="False"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </wpf:Ripple>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Slide"
                               Placement="Bottom"
                                CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                            <Border x:Name="SubMenuBorder"
                                    Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}"
                                    Effect="{DynamicResource MaterialDesignShadowDepth1}"
                                    CornerRadius="2">

                                <Border Background="Transparent">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0 0">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="True"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter Property="Height" Value="32"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Height" Value="32"/>
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                            <Setter Property="Padding" Value="16 0"/>
                            <Setter Property="Height" Value="48"/>
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="2"/>
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="16 0"/>
                            <Setter Property="Height" Value="48"/>
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="2"/>
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
                        </Trigger>

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter TargetName="SubMenuBorder" Property="Margin" Value="5"/>
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.13"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>