<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:OutWit.Common.Controls.Input"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:output="clr-namespace:OutWit.Common.Controls.Output"
                    xmlns:f="clr-namespace:OutWit.Common.Controls.Filters"
                    xmlns:p="clr-namespace:OutWit.Common.Controls.Panels">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OutWit.Common.Controls;component/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="p:ControlsPanel">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ImageSize" Value="24"/>
        <Setter Property="ShowImage" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="p:ControlsPanel">
                    <Grid Background="Transparent" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <md:PackIcon x:Name="Icon" Grid.Column="0" Grid.Row="0" Kind="{TemplateBinding ImageKind}" Foreground="{DynamicResource MaterialDesignTextBoxBorder}"
                                     Height="{TemplateBinding ImageSize}" Width="{TemplateBinding ImageSize}" IsEnabled="{TemplateBinding IsEnabled}"
                                     Visibility="{TemplateBinding ShowImage, Converter={StaticResource BooleanToVisibility}}"/>

                        <Grid Grid.Column="1" Grid.Row="1" IsSharedSizeScope="True" >

                            <ItemsPresenter/>
                            <!--<ItemsControl  ItemsSource="{TemplateBinding Filter}" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="FilterEnumName"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="15"/>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="FilterEnumValue"/>
                                                <ColumnDefinition Width="15"/>
                                            </Grid.ColumnDefinitions>

                                            <output:TextOutput Grid.Column="0" TextKey="{Binding Value}" 
                                                               TextConverter="{Binding Path=TextConverter, RelativeSource={RelativeSource AncestorType={x:Type i:FilterEnumInput}}}"/>

                                            <ToggleButton Grid.Column="3" IsChecked="{Binding IsAccepted, Mode=TwoWay}" Background="{Binding Foreground, ElementName=Icon}"
                                                          Style="{DynamicResource MaterialDesignSwitchDarkToggleButton}" Margin="0, 0, 0, 10" Focusable="False"/>
                                           
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>-->
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" TargetName="Icon"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>