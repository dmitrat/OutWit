<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OutWit.Common.Controls.Buttons"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:c="clr-namespace:OutWit.Common.Controls.Converters"
                    xmlns:o="clr-namespace:OutWit.Common.Controls.Output">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OutWit.Common.Controls;component/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="local:FlatButton">
        <Style.Resources>
            <c:StringToGeometryConverter x:Key="StringToGeometry"/>
            <md:BrushRoundConverter x:Key="BrushRoundConverter"/>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IconHeight" Value="24"/>
        <Setter Property="IconWidth" Value="24"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10, 8, 10, 8"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
        <Setter Property="OverlayBrush" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FlatButton">
                    <Grid>
                        <Border x:Name="MouseOverBorder" Opacity="0" 
                                Background="{TemplateBinding OverlayBrush, Converter={StaticResource BrushRoundConverter}}"/>

                        <Border x:Name="SelectedBorder" Opacity="0" 
                                Background="{TemplateBinding OverlayBrush, Converter={StaticResource BrushRoundConverter}}"/>

                        <md:Ripple VerticalContentAlignment="Center" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Feedback="{TemplateBinding OverlayBrush, Converter={StaticResource BrushRoundConverter}}">

                            <Border Name="Border" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" 
                                    Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}">

                                <o:IconOutput x:Name="Header" IconPosition="{TemplateBinding IconPosition}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="0" Margin="0"
                                                  Kind="{TemplateBinding Kind}" IconHeight="{TemplateBinding IconHeight}" IconWidth="{TemplateBinding IconWidth}" 
                                                  Text="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}"
                                                  FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}"/>
                               
                            </Border>

                        </md:Ripple>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" To="0.22" Duration="0:0:0.6"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.6"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <DataTrigger Binding="{Binding IsHidden, RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter TargetName="Border" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsHidden, RelativeSource={RelativeSource Self}}" Value="false">
                            <Setter TargetName="Border" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>