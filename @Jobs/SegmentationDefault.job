~IDG Segmentation for default (cylindrical, bottle-like) items ~
Job:SegmentationDefault(String:id)
{
	~Base folder~
	String:baseFolder = "D:\Services\Temp\";
	String:path ;
	
	~Variables~
	Color:background; Double:degree; UEyeImage:callback;
	
	~Process~
	Screen.Init(#ScreenId#);
	IDG.Segmentation.Init(#WorkFolder#, "Mask\mask.png", "Mask\area.xml");
		
	Loop(36)
	{	
		background = Screen.SwitchColor(0, 0, 0);
		
		~Camera.UEye.SetExposure(ueye1, #ExposureImage2#);		~
		~Camera.UEye.Snapshot(black);		~
		~path = ConcatString(#WorkFolder#, "\", id, "\", "extra2x", degree, ".png");~
		~Camera.UEye.Export(black, path);~
		
		~Camera.UEye.SetExposure(ueye1, #ExposureImage1#);		~
		~Camera.UEye.Snapshot(black);		~
		~path = ConcatString(#WorkFolder#, "\", id, "\", "extra1x", degree, ".png");~
		~Camera.UEye.Export(black, path);~
		
		Camera.UEye.SetExposure(ueye1, #ExposureImage#);		
		Camera.UEye.Snapshot(black);	
		
		callback = Camera.UEye.ScaleImage(black, "LIVE");
		Return(callback);
		
		Camera.UEye.SetExposure(ueye1, #ExposureRgb#);
		
		background = Screen.SwitchColor(255, 0, 0);
		Camera.UEye.Snapshot(red);
		callback = Camera.UEye.ScaleImage(red, "LIVE");
		Return(callback);
		
		background = Screen.SwitchColor(0, 255, 0);
		Camera.UEye.Snapshot(green);
		callback = Camera.UEye.ScaleImage(green, "LIVE");
		Return(callback);
		
		background = Screen.SwitchColor(0, 0, 255);
		Camera.UEye.Snapshot(blue);
		callback = Camera.UEye.ScaleImage(blue, "LIVE");
		Return(callback);
		
		IDG.Segmentation.Process(#WorkFolder#, id, "0", degree, black, red, green, blue);
		
		degree = Turntable.Rotate(10, "COM3");
	}
	
	Screen.Dispose();
}